#include <math.h>
#include "strcmp95.h"

#define ADAPTIVE_PRIOR 1
#define TRIPLET_ON 1
#define TRIPLET_ITERS 5
#define PR_M 0.33
#define PR_T 0.95
#define LIK_WT 4.0 

#define LATLON SQLITE_DB_NUMFIELDS
#define ASG_FIELDS  SQLITE_DB_NUMFIELDS+1

typedef struct {
    double lat;
    double lon;
    char* street;
} latlon;

typedef struct {
    char* asgname;
    u_int32_t asgnum;
} asg_struct;

res_space{
%   type        levels                                                                              missing
    jwres       JWSUB33,JWMISSING,JW33,JW66,JW100,JW100MULT,JW100MULTFULL                           JWMISSING
    asgres      ASGSUB33,ASGMISSING,ASG33,ASG66,ASG100,ASG100MULT,ASGNUM,ASGNUMMED,ASGNUMSMALL      ASGMISSING
    distres     DIST100PLUS,DISTMISSING,DIST100,DIST75,DIST50,DIST10NOST,DIST10ST,DIST0ST           DISTMISSING
    classres    CLASS0,CLASSMISS,CLASS25,CLASS50,CLASS75PLUS                                        CLASSMISS
    coauthres   C0,C1,C2,C3,C4,C5,C6,C7,C8,C9,C10                                                   NULL
    midnameres  M0,MMISSING,M33,M67,M100                                                            MMISSING
}

simprof{
%   type        name    func        extract_idx                 group
    jwres       fname   jwcmp       SQLITE_DB_INDX_FIRSTNAME    name       
    midnameres  midname midnamecmp  SQLITE_DB_INDX_FIRSTNAME    name
    jwres       lname   jwcmp       SQLITE_DB_INDX_LASTNAME     name
    distres     dist    distcmp     LATLON                      other
    asgres      asg     asgcmp      ASG_FIELDS                  other
    coauthres    cl      classcmp    SQLITE_DB_INDX_CLASS        other
    coauthres    coauths coauthcmp   SQLITE_DB_INDX_COAUTHS      other 
}

match_sets{
%    tset01_F
    tset02_F
    tset05_F
}

nonmatch_sets{
    xset01_F
    xset03_F
}

training{
%   group       match_sets                nonmatch_sets
    name        tset05_F                  xset01_F
    other       tset02_F                  xset03_F
}
